plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'de.feelix.leviathan'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT'
    implementation 'fr.mrmicky:fastboard:2.1.5' // Using mrmicky's FastBoard API, cause its just the best
}

processResources {
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand(
                version: project.version
        )
    }
}

// Configure the normal jar name (not used as final artifact)
jar {
    archiveBaseName.set('Leviathan')
}

// Configure the shaded jar with relocation of fr.mrmicky.* -> de.feelix.leviathan.mrmicky.*
shadowJar {
    archiveBaseName.set('Leviathan')
    archiveClassifier.set("") // produce Leviathan-<version>.jar without classifier
    relocate 'fr.mrmicky', 'de.feelix.leviathan.mrmicky'
}

// Make the build task produce the shaded jar by default
build.dependsOn shadowJar

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = 'releases'
            url = uri('https://repo.squarecode.de/releases')
            credentials {
                // Provide credentials via gradle.properties or environment variables
                // gradle.properties keys: squarecodeUsername, squarecodePassword
                // environment variables: SQUARECODE_USERNAME, SQUARECODE_PASSWORD
                username = findProperty('squarecodeUsername') ?: System.getenv('SQUARECODE_USERNAME')
                password = findProperty('squarecodePassword') ?: System.getenv('SQUARECODE_PASSWORD')
            }
        }
    }
}
